TO-DO

Material Design, like toasts: https://material.angularjs.org/#/demo/material.components.toast

Android performance, pack with browser: https://crosswalk-project.org/

Slidebox Styling: http://tympanus.net/codrops/2014/01/21/dot-navigation-styles/

http://www.betsmartmedia.com/what-i-learned-building-an-app-with-ionic-framework

PERFORMANCE
  6.1 Large Objects and Server Calls.
  So what does all of this teach us? The first is that we should think through our data model and attempt to limit the complexity of our objects. 
  This is especially important for objects that are returned from the server.

  It is very tempting to simply lob an entire database row over the fence, so to speak, with an eyeroll and an obligatory .toJson(). This can not be stressed enough: don't do that.

  Instead use a custom serializer to only return the subset of keys that your Angular application absolutely must have.

Avoid using filters if at all possible. They are run twice per digest cycle, once when anything changes, and another time to collect further changes. 
  
  Never bind anything (ng-show, ng-repeat, etc.) directly to a function. Never watch a function result directly. This function will run on every digest cycle, possibly slowing your application to a crawl.

How frequently will this change? (the more frequent, the worse fit ng-if is).
How heavy is the scope? (the heavyer, the better fit ng-if is).

11 DOM Event Problems
Angular provides many pre-rolled DOM event directives. ng-click, ng-mouseenter, ng-mouseleave,etc. All of these call scope.$apply() every time the event occurs. A much more efficient approach is to bind directly with addEventListener, and then use scope.$digest as necessary.


Read more at https://www.airpair.com/angularjs/posts/angularjs-performance-large-applications#I6XyY3uhAra86z7H.99

Loading Screens:
http://learn.ionicframework.com/formulas/loading-screen-with-interceptors/

Localstorage:
http://learn.ionicframework.com/formulas/localstorage/

Sharing Data:
http://learn.ionicframework.com/formulas/sharing-data-between-views/


A Day:
  A day has three img sizes. (L)arge, (M)edium, (S)mall.
  Thumbnail:
      Image + Title
      Press on a day-thumbnail to go to the Day Page
      Thumbnail Icons
        - Alert Me: if selected, the user will be notified on the day of the event at 10 AM local-time
        - Social Sharing: in V2, users will be able to like, tweet, mail, message a day
  Day Page:
    Thumbnail (L) + Title
    Date
    Description
           
Home Page:
  Today Is (L)
  Yesterday Was (M)    Tomorrow Is (M)
  Coming up over the next few days (S) (3x2 days after Tomorrow)
  This Month Is  This Year Is
  
Bottom:
  Home Page
  Categories
  Calender
    PopRow: Today (Overview), Tomorrow (Overview), All Months (Overview)
  Alerts  
    Overview of all days for which the user chose an alert (max 30)
    Auto-remove alerts older than one week(?)
  Settings
    Feedback button
    Rate the game button
  Search
    PopRow: Search Field, Search Button
  
Popup Row (PopRow):
  Pops up above the bottom row to provide choices before pulling new content, changing state/page

Day Overviews:
  Single day-date (today, tomorrow etc)
  Home Overview (Today (L), Yesterday & Tomorrow (M), 4-6 Days after tomorrow (M or S)
  Month overview